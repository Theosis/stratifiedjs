@lib     StratifiedJS '0.14.0-1-development' Standard Module Library
@summary Standard collection of modules for client and server-side stratified programming with 
         [StratifiedJS](http://onilabs.com/stratifiedjs)
@desc
    This Library is the standard collection of modules
    accompanying [StratifiedJS](http://onilabs.com/stratifiedjs).

    The Library is still under heavy development - the module content
    and organization of modules might change from one release to the
    next. Some of the more stable and fundamental modules include:

    * [sequence::]: Constructs for manipulating arrays, string and streams
    * [http::]: Functions for performing HTTP requests and working with URLs
    * [cutil::]: Functions and constructs for concurrent stratified programming


    ### Loading Standard Library Modules

    You can load modules from the Library by using the builtin `sjs:` scheme, e.g.:

        var http = require(sjs:http');

    By default, the `sjs:` scheme resolves to

        http:// [Path where 'stratified.js' was loaded from] /modules/

    on the client-side, and to 

        file:// [Path to 'sjs' executable] /modules/

    on the server.

    If you want to serve the Library from a different location, you can set
    up a *hub redirect*; e.g. to mirror the Library on your own server:

        require.hubs.unshift(["sjs:",
                              "http://mydomain.com/sjs-mirror/"]);

        // all modules addressed as sjs:' will now be loaded from
        // the location above.
    
@dir compile  SJS compilation utilities
@dir nodejs   NodeJS-related modules
@dir test     Automated testing utilities
@dir xbrowser Modules with basic cross-browser functionality

@module array           Functions for working with arrays
@module assert          Assertion functions, primarily for use in tests.
@module bundle          Create SJS code bundles
@module compare         Deep or shallow object equality comparisons
@module cutil           Functions and constructs for concurrent stratified programming
@module dashdash        Options parser (tracking the [node-dashdash library](https://github.com/trentm/node-dashdash))
@module debug           Helpers for debugging
@module events          Event emitter and utilities for dealing with events.
@module function        Function composition helpers
@module http            Functions for performing HTTP requests and working with URLs
@module jsondiffpatch   Diff & patch for JSON objects
@module logging         Simple cross-environment logging framework
@module lru-cache       Least Recently Used Cache
@module marked          Markdown to Html Converter (tracking the [marked library](https://github.com/chjj/marked))
@module numeric         Functions for numeric linear algebra computations from [numericjs.com](http://numericjs.com)
@module object          Functions for working with objects
@module quasi           Functions for working with quasis
@module sequence        Constructs for manipulating sequence structures (arrays, strings and more general streams)
@module shell-quote     Quote and parse shell commands
@module sjcl            Stanford JavaScript Crypto Library from http://crypto.stanford.edu/sjcl/
@module string          Functions for working with strings
@module sys             SJS runtime utilities
@module url             Functions for manipulating URLs
@module wraplib         Utility functions for wrapping plain JS libraries for SJS

